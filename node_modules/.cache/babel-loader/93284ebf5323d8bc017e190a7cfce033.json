{"ast":null,"code":"var _jsxFileName = \"/Users/praveensamuel/Projects/Memories/client/memories_client/src/components/Auth/Auth.js\";\nimport React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport LockOutlineIcon from '@material-ui/icons/LockOutlined';\nimport { useGoogleLogin } from '@react-oauth/google';\nimport Icon from './Icon';\nimport useStyles from './styles';\nimport Input from './Input';\nconst Auth = () => {\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const handleSubmit = () => {};\n  const handleChange = () => {};\n  const switchMode = () => {\n    setIsSignup(prevIsSignup => !prevIsSignup);\n    handleShowPassword(false);\n  };\n  const login = useGoogleLogin({\n    onSuccess: tokenResponse => {\n      console.log(tokenResponse);\n    }\n  });\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlineIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, isSignup ? 'Sign Up' : 'Sign In'), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, isSignup && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    name: \"firstName\",\n    label: \"First Name\",\n    handleChange: handleChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"firstName\",\n    label: \"First Name\",\n    handleChange: handleChange,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    label: \"Email Address\",\n    handleChange: handleChange,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"Password\",\n    handleChange: handleChange,\n    type: showPassword ? 'text' : 'password',\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), isSignup && /*#__PURE__*/React.createElement(Input, {\n    name: \"confirmPassword\",\n    label: \"Repeat Password\",\n    handleChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, isSignup ? 'Sign Up' : 'Sign In'), /*#__PURE__*/React.createElement(Button, {\n    className: classes.googleButton,\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => login(),\n    startIcon: /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 113\n      }\n    }),\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Sign In with Google\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: switchMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, isSignup ? 'Already have an accout? Sign In' : 'Create New Account'))))));\n};\nexport default Auth;","map":{"version":3,"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","LockOutlineIcon","useGoogleLogin","Icon","useStyles","Input","Auth","classes","showPassword","setShowPassword","isSignup","setIsSignup","handleSubmit","handleChange","switchMode","prevIsSignup","handleShowPassword","login","onSuccess","tokenResponse","console","log","prevShowPassword","paper","avatar","form","submit","googleButton"],"sources":["/Users/praveensamuel/Projects/Memories/client/memories_client/src/components/Auth/Auth.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core'\nimport LockOutlineIcon from '@material-ui/icons/LockOutlined'\n\nimport { useGoogleLogin } from '@react-oauth/google';\n\nimport Icon from './Icon'\nimport useStyles from './styles'\nimport Input from './Input'\n\nconst Auth = () => {\n  const classes = useStyles()\n  const [showPassword, setShowPassword] = useState(false)\n  \n  const [isSignup, setIsSignup] = useState(false)\n\n  const handleSubmit = () => {\n\n  }\n\n  const handleChange = () => {\n\n  }\n\n  const switchMode = () => {\n    setIsSignup(prevIsSignup => !prevIsSignup)\n    handleShowPassword(false)\n  }\n\n  const login = useGoogleLogin({\n  onSuccess: tokenResponse => {\n    console.log(tokenResponse)\n\n  },\n})\n\n  const handleShowPassword = () => setShowPassword( (prevShowPassword) => !prevShowPassword )\n\n  return (\n    <Container component='main' maxWidth='xs'>\n      <Paper className={classes.paper} elevation={3}>\n        <Avatar className={classes.avatar}>\n          <LockOutlineIcon />\n        </Avatar>\n        <Typography variant='h5'>{isSignup ? 'Sign Up' : 'Sign In'}</Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            {\n              isSignup && (\n                <>\n                <Input name='firstName' label='First Name' handleChange={handleChange} autoFocus half/>\n                <Input name='firstName' label='First Name' handleChange={handleChange} half/>\n\n                </>\n              )\n            }\n            <Input name='email' label='Email Address' handleChange={handleChange} type='email' />\n            <Input name='password' label='Password' handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword}/>\n            { isSignup && <Input name='confirmPassword' label='Repeat Password' handleChange={handleChange} />}\n          </Grid>\n          <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit} >\n            { isSignup ? 'Sign Up' : 'Sign In' }\n          </Button>\n          \n          <Button className={classes.googleButton} color='primary' fullWidth onClick={() => login()} startIcon={<Icon/>} variant='contained'>\n                Sign In with Google\n          </Button>\n\n          <Grid container justifyContent ='flex-end' >\n            <Grid item >\n              <Button onClick={switchMode}>\n                { isSignup ? 'Already have an accout? Sign In' : 'Create New Account'  }\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  )\n}\n\nexport default Auth"],"mappings":"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"},"metadata":{},"sourceType":"module"}